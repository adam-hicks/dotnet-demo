{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green150\blue149;\red34\green34\blue34;\red51\green99\blue164;
\red136\green138\blue133;\red219\green113\blue0;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c58824\c58431;\csgenericrgb\c13333\c13333\c13333;\csgenericrgb\c20000\c38824\c64314;
\csgenericrgb\c53333\c54118\c52157;\csgenericrgb\c85882\c44314\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 using\cf3  System;\uc0\u8232 \cf2 using\cf3  System.Collections.Generic;\uc0\u8232 \cf2 using\cf3  System.IO;\uc0\u8232 \cf2 using\cf3  Dynastream.Fit;\uc0\u8232 \cf2 using\cf3  PeakswareTest.Models;\uc0\u8232 \u8232 \cf2 namespace\cf3  PeakswareTest.Data\uc0\u8232 \{\u8232     \cf2 public\cf3  \cf2 static\cf3  \cf2 class\cf3  \cf4 FitImportFull\uc0\u8232 \cf3     \{\uc0\u8232 \u8232 \u8232         \cf2 static\cf3  \cf4 Dictionary\cf3 <\cf2 ushort\cf3 , \cf2 int\cf3 > mesgCounts = \cf2 new\cf3  \cf4 Dictionary\cf3 <\cf2 ushort\cf3 , \cf2 int\cf3 >();\uc0\u8232         \cf2 private\cf3  \cf2 static\cf3  System.\cf4 DateTime\cf3 ? _start;\uc0\u8232         \cf2 private\cf3  \cf2 static\cf3  \cf4 Workout\cf3  workout = \cf2 new\cf3  \cf4 Workout\cf3 ();\uc0\u8232 \u8232         \cf2 public\cf3  \cf2 static\cf3  \cf4 Workout\cf3  ImportData(\cf2 string\cf3  filename)\uc0\u8232         \{\u8232             \cf5 // Attempt to open .FIT file\uc0\u8232 \cf3             \cf2 if\cf3  (!System.IO.\cf4 File\cf3 .Exists(filename))\uc0\u8232             \{\u8232                 \cf2 return\cf3  \cf2 null\cf3 ;\uc0\u8232             \}\u8232             \cf2 using\cf3  (\cf2 var\cf3  fitSource = \cf2 new\cf3  \cf4 FileStream\cf3 (filename, \cf4 FileMode\cf3 .Open))\uc0\u8232             \{\u8232                 \cf4 Decode\cf3  decodeDemo = \cf2 new\cf3  \cf4 Decode\cf3 ();\uc0\u8232                 \cf4 MesgBroadcaster\cf3  mesgBroadcaster = \cf2 new\cf3  \cf4 MesgBroadcaster\cf3 ();\uc0\u8232 \u8232                 \cf5 // Connect the Broadcaster to our event source (in this case the Decoder)\uc0\u8232 \cf3                 decodeDemo.MesgEvent += mesgBroadcaster.OnMesg;\uc0\u8232 \u8232                 \cf5 // Subscribe to message events of interest by connecting to the Broadcaster\uc0\u8232 \cf3                 mesgBroadcaster.MesgEvent += OnMesg;\uc0\u8232                 mesgBroadcaster.FileIdMesgEvent += OnFileIDMesg;\u8232 \u8232                 \cf2 bool\cf3  status = decodeDemo.IsFIT(fitSource) && decodeDemo.CheckIntegrity(fitSource);\uc0\u8232                 \cf5 // Process the file\uc0\u8232 \cf3                 \cf2 if\cf3  (status)\uc0\u8232                 \{\u8232                     decodeDemo.Read(fitSource);\u8232                 \}\u8232                 \cf2 else\uc0\u8232 \cf3                 \{\uc0\u8232                     \cf2 return\cf3  \cf2 null\cf3 ;\uc0\u8232                 \}\u8232             \}\u8232             workout.Timestamp = _start;\u8232             \cf2 return\cf3  workout;\uc0\u8232         \}\u8232 \u8232         \cf2 static\cf3  \cf2 void\cf3  OnMesg(\cf2 object\cf3  sender, \cf4 MesgEventArgs\cf3  e)\uc0\u8232         \{\u8232             \cf2 foreach\cf3  (\cf4 Field\cf3  field \cf2 in\cf3  e.mesg.Fields)\uc0\u8232             \{\u8232                 \cf2 for\cf3  (\cf2 int\cf3  j = \cf6 0\cf3 ; j < field.GetNumValues(); j++)\uc0\u8232                 \{\u8232                     \cf2 switch\cf3  (e.mesg.Name)\uc0\u8232                     \{\u8232                         \cf2 case\cf3  \cf6 "Session"\cf3 :\uc0\u8232                             \cf2 var\cf3  sessionMesg = (\cf4 SessionMesg\cf3 )e.mesg;\uc0\u8232                             \cf4 Session\cf3  session = \cf2 new\cf3  \cf4 Session\cf3 ();\uc0\u8232                             session.SessionMetrics.Add(field.GetName(), field.GetValue());\u8232                             session.Timestamp = (sessionMesg.GetTimestamp().GetDateTime());\u8232                             workout.Session = session;\u8232                             \cf2 break\cf3 ;\uc0\u8232                         \cf2 case\cf3  \cf6 "Lap"\cf3 :\uc0\u8232                             \cf2 var\cf3  lapMesg = (\cf4 LapMesg\cf3 )(e.mesg);\uc0\u8232                             \cf4 Lap\cf3  lap = \cf2 new\cf3  \cf4 Lap\cf3 ();\uc0\u8232                             lap.LapMetrics.Add(field.GetName(), field.GetValue());\u8232                             lap.Timestamp = (lapMesg.GetTimestamp().GetDateTime());\u8232                             workout.Laps.Add(lap);\u8232                             \cf2 break\cf3 ;\uc0\u8232                         \cf5 //case "Record":\uc0\u8232 \cf3                             \cf5 //var recordMesg = (RecordMesg)e.mesg;\uc0\u8232 \cf3                             \cf5 //Record record = new Record();\uc0\u8232 \cf3                             \cf5 //record.RecordMetrics.Add(field.GetName(), field.GetValue());\uc0\u8232 \cf3                             \cf5 //record.Timestamp = (recordMesg.GetTimestamp().GetDateTime());\uc0\u8232 \cf3                             \cf5 //workout.Records.Add(record);\uc0\u8232 \cf3                             \cf5 //break;\uc0\u8232 \cf3                         \cf2 default\cf3 :\uc0\u8232                             \cf2 break\cf3 ;\uc0\u8232                     \}\u8232                 \}\u8232             \}\u8232 \u8232             \cf2 if\cf3  (mesgCounts.ContainsKey(e.mesg.Num))\uc0\u8232             \{\u8232                 mesgCounts[e.mesg.Num]++;\u8232             \}\u8232             \cf2 else\uc0\u8232 \cf3             \{\uc0\u8232                 mesgCounts.Add(e.mesg.Num, \cf6 1\cf3 );\uc0\u8232             \}\u8232         \}\u8232 \u8232         \cf2 private\cf3  \cf2 static\cf3  \cf2 void\cf3  StoreDataInAppropriateModel(\cf4 MesgEventArgs\cf3  e, \cf4 Field\cf3  field)\uc0\u8232         \{\u8232             \cf2 switch\cf3  (e.mesg.Name)\uc0\u8232             \{\u8232                 \cf2 case\cf3  \cf6 "Session"\cf3 :\uc0\u8232                     \cf2 var\cf3  sessionMesg = (\cf4 SessionMesg\cf3 )e.mesg;\uc0\u8232                     \cf4 Session\cf3  session = \cf2 new\cf3  \cf4 Session\cf3 ();\uc0\u8232                     session.SessionMetrics.Add(field.GetName(), field.GetValue());\u8232                     session.Timestamp = (sessionMesg.GetTimestamp().GetDateTime());\u8232                     workout.Session = session;\u8232                     \cf2 break\cf3 ;\uc0\u8232                 \cf2 case\cf3  \cf6 "Lap"\cf3 :\uc0\u8232                     \cf2 var\cf3  lapMesg = (\cf4 LapMesg\cf3 )e.mesg;\uc0\u8232                     \cf4 Lap\cf3  lap = \cf2 new\cf3  \cf4 Lap\cf3 ();\uc0\u8232                     lap.LapMetrics.Add(field.GetName(), field.GetValue());\u8232                     lap.Timestamp = (lapMesg.GetTimestamp().GetDateTime());\u8232                     workout.Laps.Add(lap);\u8232                     \cf2 break\cf3 ;\uc0\u8232                 \cf2 case\cf3  \cf6 "Record"\cf3 :\uc0\u8232                     \cf2 var\cf3  recordMesg = (\cf4 RecordMesg\cf3 )e.mesg;\uc0\u8232                     \cf4 Record\cf3  record = \cf2 new\cf3  \cf4 Record\cf3 ();\uc0\u8232                     record.RecordMetrics.Add(field.GetName(), field.GetValue());\u8232                     record.Timestamp = (recordMesg.GetTimestamp().GetDateTime());\u8232                     workout.Records.Add(record);\u8232                     \cf2 break\cf3 ;\uc0\u8232                 \cf2 default\cf3 :\uc0\u8232                     \cf2 break\cf3 ;\uc0\u8232             \}\u8232         \}\u8232 \u8232 \u8232 \u8232         \cf2 static\cf3  \cf2 void\cf3  OnFileIDMesg(\cf2 object\cf3  sender, \cf4 MesgEventArgs\cf3  e)\uc0\u8232         \{\u8232             \cf4 FileIdMesg\cf3  myFileId = (\cf4 FileIdMesg\cf3 )e.mesg;\uc0\u8232 \u8232             \cf2 if\cf3  (myFileId.GetTimeCreated() != \cf2 null\cf3 )\uc0\u8232             \{\u8232                 _start = myFileId.GetTimeCreated().GetDateTime();\u8232             \}\u8232         \}\u8232     \}\u8232 \}\u8232 \u8232 \u8232 }